name: ProjectMatch CI_CD

on:
  push:
    branches: [ "develop" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application-prod.properties
        run: |
          cd ./src/main/resources
          touch ./application-prod.properties
          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --no-cache --progress=plain -t app .
          docker tag app ${{ secrets.DOCKER_USERNAME }}/projectmatch:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/projectmatch:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Get GitHub Actions runner IP
        id: get_ip
        run: |
          echo "RUNNER_IP=$(curl -s http://checkip.amazonaws.com)" >> $GITHUB_ENV

      - name: Allow SSH from GitHub Actions runner IP
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.RUNNER_IP }}/32

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker-compose -f /home/ubuntu/compose/docker-compose.yml pull
            docker-compose -f /home/ubuntu/compose/docker-compose.yml down --rmi all
            docker-compose -f /home/ubuntu/compose/docker-compose.yml up -d --force-recreate

      - name: Revoke SSH from GitHub Actions runner IP
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.RUNNER_IP }}/32
